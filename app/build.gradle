/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Scala application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.0/userguide/building_java_projects.html
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use Scala 2.11 in our library project
    implementation 'org.scala-lang:scala-library:2.11.12'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.0-jre'
    
    // https://mvnrepository.com/artifact/com.cloudera.impala.jdbc/ImpalaJDBC41
    // implementation group: 'com.cloudera.impala.jdbc', name: 'ImpalaJDBC41', version: '2.6.3'

    // https://mvnrepository.com/artifact/com.amazonaws/aws-java-sdk
    implementation group: 'com.amazonaws', name: 'aws-java-sdk', version: '1.12.20'

    // implementation group: 'com.github.andyglow', name: 'ulid_2.13', version: '0.0.3'
    
    // implementation group: 'org.wvlet.airframe', name: 'airframe-ulid', version: '21.4.0'
    implementation files('libs/ImpalaJDBC41.jar')
    implementation files('libs/slf4j-api-1.7.25.jar')
    implementation files('libs/slf4j-simple-1.7.25.jar')
    
    // Use Scalatest for testing our library
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.scalatest:scalatest_2.11:3.2.3'
    testImplementation 'org.scalatestplus:junit-4-13_2.11:3.2.2.0'

    // Need scala-xml at test runtime
    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.11:1.2.0'


}

application {
    // Define the main class for the application.
    mainClass = 'dqr.App'
}
